// <auto-generated />
using System;
using DataAccess.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Shop")
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.ProductCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("توضیحات");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("عنوان");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint")
                        .HasComment("آیدی دسته بندی اصلی محصول");

                    b.Property<Guid>("SerialNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newsequentialid())")
                        .HasComment("شماره سریال برای ارتباط با باقی سیستم ها");

                    b.Property<DateTimeOffset?>("_DeleteDate")
                        .HasColumnType("datetimeoffset")
                        .HasComment("تاریخ حذف");

                    b.Property<Guid?>("_DeletedByUser")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("کاربر حذف کننده");

                    b.Property<bool>("_IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<byte[]>("_RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasComment("بررسی همزمانی");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories", "Shop", t =>
                        {
                            t.HasComment("دسته بندی های محصول");
                        });
                });

            modelBuilder.Entity("Domain.Models.ProductCategory", b =>
                {
                    b.OwnsOne("Domain.Models.Seo", "Seo", b1 =>
                        {
                            b1.Property<long>("ProductCategoryId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Keywords")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)")
                                .HasComment("کلمات کلیدی برای سئو");

                            b1.Property<string>("MetaDescription")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)")
                                .HasComment("توضیحات متا برای سئو");

                            b1.Property<string>("Slug")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)")
                                .HasComment("اسلاگ برای سئو");

                            b1.HasKey("ProductCategoryId");

                            b1.ToTable("ProductCategories", "Shop");

                            b1.WithOwner()
                                .HasForeignKey("ProductCategoryId");
                        });

                    b.Navigation("Seo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
